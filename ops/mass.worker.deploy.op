# Description:
# - This script is used to install the required source code for running massprospecting sdk nodes.
#

# Dedicated code folder for MassProspecting code.
#
RUN mkdir -p /home/$$ssh_username/code1

# Cloning and updating code of mass-sdk in the ~/code/sdk folder.
#
RUN if [ ! -d /home/$$ssh_username/code1/$$code_folder ]; then
    git clone https://$$git_username:$$git_password@github.com/$$git_repository /home/$$ssh_username/code1/$$code_folder
fi

# Pull last version of source code
#
RUN cd /home/$$ssh_username/code1/$$code_folder && git fetch --all
RUN cd /home/$$ssh_username/code1/$$code_folder && git reset --hard origin/$$git_branch
RUN cd /home/$$ssh_username/code1/$$code_folder && git switch $$git_branch
RUN cd /home/$$ssh_username/code1/$$code_folder && git origin $$git_branch

## DEPRECATED
##
## Configuration file
##
## 1. Delete existing file /home/$$ssh_username/code1/$$code_folder/conf.rb
## 2. Delete existing folder /home/$$ssh_username/code1/secret
## 3. Clone the repository https://github.com/massprospecting/secret into the folder /home/$$ssh_username/code1/secret  (requires $$git_username and $$git_password).
## 4. Copy the file /home/$$ssh_username/code1/secret/config-sdk.rb into folder /home/$$ssh_username/code1/$$code_folder/config.rb
##
#RUN rm -f /home/$$ssh_username/code1/$$code_folder/conf.rb
#RUN rm -rf /home/$$ssh_username/code1/secret
#RUN git clone https://$$git_username:$$git_password@github.com/massprospecting/secret /home/$$ssh_username/code1/secret
#RUN cp /home/$$ssh_username/code1/secret/config-sdk.rb /home/$$ssh_username/code1/$$code_folder/config.rb

# Bundler
# Glitch: https://github.com/MassProspecting/deployment/issues/38
#
RUN source /etc/profile.d/rvm.sh && cd /home/$$ssh_username/code1/$$code_folder && bundler update

# 1. Copy MySaaSFile to config.rb
RUN cp "/home/$$ssh_username/code1/$$code_folder/MySaaSFile" "/home/$$ssh_username/code1/$$code_folder/config.rb"
RUN sed -i "s/!!adspower_api_key/$$adspower_api_key/g" "/home/$$ssh_username/code1/$$code_folder/config.rb"
RUN sed -i "s/!!vymeco_api_key/$$vymeco_api_key/g" "/home/$$ssh_username/code1/$$code_folder/config.rb"
RUN sed -i "s/!!mass_api_key/$$mass_api_key/g" "/home/$$ssh_username/code1/$$code_folder/config.rb"
RUN sed -i "s/!!mass_api_url/$$mass_api_url/g" "/home/$$ssh_username/code1/$$code_folder/config.rb"
RUN sed -i "s/!!mass_api_port/$$mass_api_port/g" "/home/$$ssh_username/code1/$$code_folder/config.rb"
RUN sed -i "s/!!aws_s3_region/$$aws_s3_region/g" "/home/$$ssh_username/code1/$$code_folder/config.rb"
RUN sed -i "s/!!aws_s3_access_key_id/$$aws_s3_access_key_id/g" "/home/$$ssh_username/code1/$$code_folder/config.rb"
RUN sed -i "s/!!aws_s3_secret_access_key/$$aws_s3_secret_access_key/g" "/home/$$ssh_username/code1/$$code_folder/config.rb"
RUN sed -i "s/!!aws_s3_bucket_name/$$aws_s3_bucket_name/g" "/home/$$ssh_username/code1/$$code_folder/config.rb"
RUN sed -i "s/!!monitoring_saas_url/$$monitoring_saas_url/g" "/home/$$ssh_username/code1/$$code_folder/config.rb"
RUN sed -i "s/!!monitoring_saas_port/$$monitoring_saas_port/g" "/home/$$ssh_username/code1/$$code_folder/config.rb"
RUN sed -i "s/!!monitoring_saas_su_api_key/$$monitoring_saas_su_api_key/g" "/home/$$ssh_username/code1/$$code_folder/config.rb"


# Ruby’s tmpdir library is refusing to pick any temporary directory because it sees that both /tmp and 
# the current directory `.` are world-writable and not fully secured with the “sticky bit.”. 
#
# By default, Ruby checks whether the system’s temp path is in a directory path that is world-writable 
# without a sticky bit—if so, it bails out with:
# - could not find a temporary directory (ArgumentError)
# - `.` is world-writable: /home/blackstack/code1/sdk/p
# means your current working directory is 0777 (or similar). This also triggers Ruby’s security check.
#
# This command will apply 755 permissions (owner read/write/execute, group and others read/execute) to 
# every item—both directories and files—inside that path, including subdirectories and their contents.
#
# ```
# chmod -R 755 /home/blackstack/code1
# ```
#
# Also, this command avoid the `.git` folders because `blackops` doesn't has permission on them.
#
#
#
# References: 
# - https://github.com/MassProspecting/docs/issues/458
# - https://github.com/MassProspecting/docs/issues/460
#
RUN find /home/blackstack/code1 -name .git -prune -o -exec chmod 755 {} +
